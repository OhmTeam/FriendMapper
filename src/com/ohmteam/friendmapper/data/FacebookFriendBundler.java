package com.ohmteam.friendmapper.data;

import java.util.ArrayList;
import java.util.List;

import android.os.Bundle;

import com.google.android.gms.maps.model.LatLng;

/**
 * Helper class that provides static convenience methods for saving and loading
 * FacebookFriends to and from Android's Bundle objects.
 * 
 * @author Dylan
 */
public class FacebookFriendBundler {

	/**
	 * Create a Bundle object that represents the given friend. Format is
	 * <code>{'id': id, 'name': name, 'lat': latitude, 'long': longitude}</code>
	 * 
	 * @param friend The friend to serialize
	 * @return The serialized friend, as a Bundle
	 */
	public static Bundle friendToBundle(FacebookFriend friend) {
		Bundle b = new Bundle();
		b.putString("id", friend.getId());
		b.putString("name", friend.getName());
		LatLng loc = friend.getLocation();
		b.putDouble("lat", loc.latitude);
		b.putDouble("long", loc.longitude);
		return b;
	}

	/**
	 * Creates a FacebookFriend from the given bundle. Format is expected to be
	 * the same as what is described in {@link #friendToBundle(FacebookFriend)}.
	 * 
	 * @param b The bundle to deserialize
	 * @return The deserialized friend. If the format was incorrect, some of the
	 *         returned friend's fields may be incorrect/null.
	 */
	public static FacebookFriend friendFromBundle(Bundle b) {
		String id = b.getString("id");
		String name = b.getString("name");
		double lat = b.getDouble("lat");
		double lng = b.getDouble("long");
		LatLng loc = new LatLng(lat, lng);
		return new FacebookFriend(id, name, loc);
	}

	/**
	 * Creates a Bundle object that represents a list of friends. Format is
	 * <code>{
	 *   'numFriends': <friends.size()>, 
	 *   'friend0': <friends.get(0)>,
	 *   'friend1': <friends.get(1)>,
	 *   ...
	 *   'friendN': <friends.get(N)>
	 * }</code>
	 * 
	 * @param friends A list of friends to be serialized
	 * @return The serialized friends list, as a Bundle
	 */
	public static Bundle friendsToBundle(List<FacebookFriend> friends) {
		Bundle b = new Bundle();
		b.putInt("numFriends", friends.size());
		int i = 0;
		for (FacebookFriend friend : friends) {
			b.putBundle("friend" + i, friendToBundle(friend));
			++i;
		}
		return b;
	}

	/**
	 * Creates a list of friends based on the given Bundle object, which is
	 * expected to be in the format generated by {@link #friendsToBundle(List)}.
	 * 
	 * @param b The bundle to deserialize
	 * @return The deserialized list of friends, as long as the format was
	 *         correct. Garbage in, garbage out.
	 */
	public static List<FacebookFriend> friendsFromBundle(Bundle b) {
		int numFriends = b.getInt("numFriends");
		List<FacebookFriend> friends = new ArrayList<FacebookFriend>(numFriends);
		for (int i = 0; i < numFriends; i++) {
			Bundle fb = b.getBundle("friend" + i);
			FacebookFriend friend = friendFromBundle(fb);
			friends.add(friend);
		}
		return friends;
	}
}
